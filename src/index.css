@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Light Theme */
    --background: 0 0% 100%;
    --foreground: 222 47% 11%;

    --card: 0 0% 100%;
    --card-foreground: 222 47% 11%;

    --popover: 0 0% 100%;
    --popover-foreground: 222 47% 11%;

    /* Purple Primary */
    --primary: 271 91% 65%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 271 91% 75%;

    /* Pink/Magenta Secondary */
    --secondary: 320 85% 60%;
    --secondary-foreground: 0 0% 100%;
    --secondary-glow: 320 85% 70%;

    --muted: 210 40% 96%;
    --muted-foreground: 215 16% 47%;

    --accent: 271 91% 65%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: 271 91% 65%;

    --radius: 0.75rem;
  }

  .dark {
    /* Dark Space Theme - Purple/Pink from reference image */
    --background: 240 27% 8%;
    --foreground: 0 0% 98%;

    --card: 240 20% 12%;
    --card-foreground: 0 0% 98%;

    --popover: 240 20% 12%;
    --popover-foreground: 0 0% 98%;

    /* Purple Primary */
    --primary: 271 91% 65%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 271 91% 75%;

    /* Pink/Magenta Secondary */
    --secondary: 320 85% 60%;
    --secondary-foreground: 0 0% 100%;
    --secondary-glow: 320 85% 70%;

    --muted: 240 20% 20%;
    --muted-foreground: 0 0% 70%;

    --accent: 271 91% 65%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 240 20% 20%;
    --input: 240 20% 20%;
    --ring: 271 91% 65%;
  }

  /* Gradients */
  :root, .dark {
    --gradient-primary: linear-gradient(135deg, hsl(271 91% 65%), hsl(271 91% 75%));
    --gradient-secondary: linear-gradient(135deg, hsl(320 85% 60%), hsl(320 85% 70%));
    --gradient-mesh: radial-gradient(ellipse at top, hsl(271 91% 25% / 0.3), transparent 50%),
                     radial-gradient(ellipse at bottom, hsl(240 27% 8%), hsl(240 27% 4%));
    
    /* Shadows & Effects */
    --shadow-glow-primary: 0 0 60px hsl(271 91% 65% / 0.4);
    --shadow-glow-secondary: 0 0 60px hsl(320 85% 60% / 0.4);
    --shadow-card: 0 20px 60px -10px hsl(0 0% 0% / 0.5);
    
    /* Transitions */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground antialiased;
    font-family: 'Inter', 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    min-height: 100vh;
    position: relative;
    overflow-x: hidden;
  }

  /* Animated background orbs */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: 
      radial-gradient(circle at 20% 80%, hsl(var(--primary) / 0.15) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, hsl(var(--secondary) / 0.15) 0%, transparent 50%),
      radial-gradient(circle at 40% 40%, hsl(var(--primary) / 0.1) 0%, transparent 50%);
    animation: float-orbs 20s ease-in-out infinite;
    pointer-events: none;
    z-index: -1;
  }

  .dark body::before {
    background: 
      radial-gradient(circle at 20% 80%, hsl(var(--primary) / 0.08) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, hsl(var(--secondary) / 0.08) 0%, transparent 50%),
      radial-gradient(circle at 40% 40%, hsl(var(--primary) / 0.05) 0%, transparent 50%);
  }

  @keyframes float-orbs {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    33% { transform: translate(30px, -30px) rotate(120deg); }
    66% { transform: translate(-20px, 20px) rotate(240deg); }
  }

  /* Scroll-based gradient animation */
  body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: linear-gradient(
      45deg,
      transparent 0%,
      hsl(var(--primary) / 0.03) 25%,
      transparent 50%,
      hsl(var(--secondary) / 0.03) 75%,
      transparent 100%
    );
    background-size: 400% 400%;
    animation: gradient-shift 15s ease infinite;
    pointer-events: none;
    z-index: -1;
  }

  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes orbital-motion {
    0% { transform: rotate(0deg) translateX(50px) rotate(0deg); }
    100% { transform: rotate(360deg) translateX(50px) rotate(-360deg); }
  }

  @keyframes orbital-motion-reverse {
    0% { transform: rotate(0deg) translateX(80px) rotate(0deg); }
    100% { transform: rotate(-360deg) translateX(80px) rotate(360deg); }
  }

  @keyframes orbital-motion-large {
    0% { transform: rotate(0deg) translateX(120px) rotate(0deg); }
    100% { transform: rotate(360deg) translateX(120px) rotate(-360deg); }
  }

  .animate-orbital {
    animation: orbital-motion 15s linear infinite;
  }

  .animate-orbital-reverse {
    animation: orbital-motion-reverse 20s linear infinite;
  }

  .animate-orbital-large {
    animation: orbital-motion-large 25s linear infinite;
  }

  html {
    scroll-behavior: smooth;
  }

  * {
    scroll-behavior: smooth;
  }

  /* 60fps smooth scrolling with hardware acceleration */
  html, body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
  }

  /* 60fps Performance optimizations */
  * {
    box-sizing: border-box;
  }

  #root {
    isolation: isolate;
    contain: layout style paint;
    position: relative;
  }

  section {
    will-change: transform;
    transform: translate3d(0, 0, 0);
    contain: layout style;
  }

  .glass-card {
    will-change: transform, opacity;
    transform: translate3d(0, 0, 0);
  }

  /* Reduce motion for better performance */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* Optimized theme transitions */
  html, body {
    transition: background-color 0.2s ease;
  }

  .glass-card, [class*="bg-"], [class*="text-"] {
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease, transform 0.2s ease;
  }


}

@layer utilities {
  .glass-card {
    @apply backdrop-blur-2xl border;
    position: relative;
    z-index: 1;
  }

  .dark .glass-card {
    background: rgba(30, 41, 59, 0.8) !important;
    border-color: rgba(255, 255, 255, 0.1) !important;
    box-shadow: 0 8px 32px 0 rgba(138, 43, 226, 0.1);
  }

  :root .glass-card {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.5) 100%);
    border-color: rgba(138, 43, 226, 0.2);
    box-shadow: 0 8px 32px 0 rgba(138, 43, 226, 0.15);
    backdrop-filter: blur(10px);
  }

  .glass-card::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(135deg, hsl(var(--primary) / 0.3), transparent);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }

  .text-gradient-primary {
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-glow)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .text-gradient-secondary {
    background: linear-gradient(135deg, hsl(var(--secondary)), hsl(var(--secondary-glow)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .hover-glow-primary {
    transition: var(--transition-smooth);
  }

  .hover-glow-primary:hover {
    box-shadow: var(--shadow-glow-primary);
    transform: translateY(-4px);
  }

  .hover-glow-secondary {
    transition: var(--transition-smooth);
  }

  .hover-glow-secondary:hover {
    box-shadow: var(--shadow-glow-secondary);
    transform: translateY(-4px);
  }

  .scroll-animate {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .scroll-animate.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .perspective-card {
    perspective: 1000px;
  }

  .perspective-card:hover {
    transform: scale(1.02);
  }

  .shadow-glow-primary {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.5), 
                0 0 40px hsl(var(--primary) / 0.3);
  }

  .shadow-glow-secondary {
    box-shadow: 0 0 20px hsl(var(--secondary) / 0.5), 
                0 0 40px hsl(var(--secondary) / 0.3);
  }
}
